services:
  postgres-db:
    image: postgres:alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5434:5432" # host:container
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: server-app:latest
    container_name: server
    environment:
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432       # container port
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "50051:50051"
    networks:
      - backend
    depends_on:
      postgres-db:
        condition: service_healthy
    restart: always

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: client-app:latest
    environment:
      FLASK_ENV: development
      GRPC_SERVER_HOST: server
      GRPC_SERVER_PORT: 50051
    container_name: client
    ports:
      - "5000:5000"
    networks:
      - backend
    depends_on:
      server:
        condition: service_started

networks:
  backend:
